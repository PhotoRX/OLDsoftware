/*
    The code in this file uses open source libraries provided by thecoderscorner

    DO NOT EDIT THIS FILE, IT WILL BE GENERATED EVERY TIME YOU USE THE UI DESIGNER
    INSTEAD EITHER PUT CODE IN YOUR SKETCH OR CREATE ANOTHER SOURCE FILE.

    All the variables you may need access to are marked extern in this file for easy
    use elsewhere.
 */

#ifndef MENU_GENERATED_CODE_H
#define MENU_GENERATED_CODE_H

#include <Arduino.h>
#include <tcMenu.h>
#include "tcMenuTfteSpi.h"
#include <graphics/MenuTouchScreenEncoder.h>
#include <RuntimeMenuItem.h>

void setupMenu();  // forward reference of the menu setup function.
extern const PROGMEM ConnectorLocalInfo applicationInfo;  // contains app name and ID

// Global variables that need exporting

extern TFT_eSPI tft;
extern TfteSpiDrawable tftDrawable;
extern GraphicsDeviceRenderer renderer;

// Global Menu Item exports

extern TextMenuItem menuLogMessage;
extern AnalogMenuItem menuMotherboardTemp;
extern AnalogMenuItem menuTemperaturePCP4;
extern AnalogMenuItem menuTemperaturePCP3;
extern AnalogMenuItem menuTemperaturePCP2;
extern AnalogMenuItem menuTemperaturePCP1;
extern BackMenuItem menuBackTemperatures;
extern SubMenuItem menuTemperatures;
extern TimeFormattedMenuItem menuTime;
extern DateFormattedMenuItem menuDate;
extern AnalogMenuItem menuChannel15;
extern AnalogMenuItem menuChannel14;
extern AnalogMenuItem menuChannel13;
extern AnalogMenuItem menuChannel12;
extern AnalogMenuItem menuChannel11;
extern AnalogMenuItem menuChannel10;
extern AnalogMenuItem menuChannel9;
extern AnalogMenuItem menuChannel8;
extern AnalogMenuItem menuChannel7;
extern AnalogMenuItem menuChannel6;
extern AnalogMenuItem menuChannel5;
extern AnalogMenuItem menuChannel4;
extern AnalogMenuItem menuChannel3;
extern AnalogMenuItem menuChannel2;
extern AnalogMenuItem menuChannel1;
extern AnalogMenuItem menuChannel0;
extern BackMenuItem menuBackCurrentConsumpion;
extern SubMenuItem menuCurrentConsumpion;
extern ActionMenuItem menuEmergencyStop;
extern ActionMenuItem menuStartExperiment;
extern ActionMenuItem menuSaveToMode1;
extern ActionMenuItem menuSaveToMode2;
extern AnalogMenuItem menuSeconds;
extern AnalogMenuItem menuMinutes;
extern AnalogMenuItem menuHours;
extern BackMenuItem menuBackExperimentTime;
extern SubMenuItem menuExperimentTime;
extern AnalogMenuItem menuPercentage;
extern EnumMenuItem menuSquareConfig;
extern EnumMenuItem menuReactorSide;
extern EnumMenuItem menuVialConf;
extern BackMenuItem menuBackConfiguration;
extern SubMenuItem menuConfiguration;
extern ActionMenuItem menuResetConfig;
extern ActionMenuItem menuSetCurrent;
extern ActionMenuItem menuSetMode2;
extern ActionMenuItem menuSetMode1;
extern BackMenuItem menuBackSettings;
extern SubMenuItem menuSettings;

// Provide a wrapper to get hold of the root menu item
inline MenuItem& rootMenuItem() { return menuSettings; }

// Callback functions must always include CALLBACK_FUNCTION after the return type
#define CALLBACK_FUNCTION

void CALLBACK_FUNCTION onChangeEmergencyStop(int id);
void CALLBACK_FUNCTION onChangeStartExperiment(int id);
void CALLBACK_FUNCTION onResetConfig(int id);
void CALLBACK_FUNCTION onSaveToMode1(int id);
void CALLBACK_FUNCTION onSaveToMode2(int id);
void CALLBACK_FUNCTION onSetCurrent(int id);
void CALLBACK_FUNCTION onSetMode1(int id);
void CALLBACK_FUNCTION onSetMode2(int id);

#endif // MENU_GENERATED_CODE_H
